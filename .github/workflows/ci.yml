name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  unit_tests:
    name: Unit tests and Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with pylint
        run: |
          pylint src/ --exit-zero --output-format=colorized
          pylint src/ --fail-under=8.0

      - name: Run tests with coverage
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'sk-test-key-for-ci' }}
        run: |
          # Ensure coverage uses the repository .coveragerc so intentional
          # omissions are respected.
          pytest --cov=src --cov-config=.coveragerc --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
        continue-on-error: true

      - name: Check coverage threshold
        run: |
          coverage report --fail-under=100

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install and run frontend tests
        working-directory: ./web
        run: |
          npm ci
          npm run test -- --run

  integration:
    name: Integration tests (Tracker)
    needs: unit_tests
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7
        ports:
          - 6379:6379
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run integration tests
        env:
          RUN_INTEGRATION: '1'
          REDIS_URL: 'redis://localhost:6379/0'
          DATABASE_URL: 'sqlite:///./ci_integration.db'
        run: |
          pytest -q -m integration
